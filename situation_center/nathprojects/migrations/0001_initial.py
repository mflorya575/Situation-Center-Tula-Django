# Generated by Django 4.2.8 on 2024-07-28 17:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Предпринимательство',
                'verbose_name_plural': 'Предпринимательство',
            },
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Культура',
                'verbose_name_plural': 'Культура',
            },
        ),
        migrations.CreateModel(
            name='Demographics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Демография',
                'verbose_name_plural': 'Демография',
            },
        ),
        migrations.CreateModel(
            name='Ecology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Экология',
                'verbose_name_plural': 'Экология',
            },
        ),
        migrations.CreateModel(
            name='Econom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Экономика',
                'verbose_name_plural': 'Экономика',
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Здравоохранение',
                'verbose_name_plural': 'Здравоохранение',
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Жилье',
                'verbose_name_plural': 'Жилье',
            },
        ),
        migrations.CreateModel(
            name='Labour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Труд',
                'verbose_name_plural': 'Труд',
            },
        ),
        migrations.CreateModel(
            name='Road',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Безопас. дороги',
                'verbose_name_plural': 'Безопас. дороги',
            },
        ),
        migrations.CreateModel(
            name='Science',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Наука',
                'verbose_name_plural': 'Наука',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образование',
            },
        ),
        migrations.CreateModel(
            name='Turism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Туризм',
                'verbose_name_plural': 'Туризм',
            },
        ),
        migrations.CreateModel(
            name='World',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Международка',
                'verbose_name_plural': 'Международка',
            },
        ),
        migrations.CreateModel(
            name='WorldData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('data', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.world')),
            ],
            options={
                'verbose_name': 'Данные по международке',
                'verbose_name_plural': 'Данные по международке',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TurismData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('data', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.turism')),
            ],
            options={
                'verbose_name': 'Данные по туризму',
                'verbose_name_plural': 'Данные по туризму',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('pupil', models.IntegerField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.study')),
            ],
            options={
                'verbose_name': 'Данные по образованию',
                'verbose_name_plural': 'Данные по образованию',
                'ordering': ['study'],
            },
        ),
        migrations.CreateModel(
            name='ScienceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('data', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.science')),
            ],
            options={
                'verbose_name': 'Данные по науке',
                'verbose_name_plural': 'Данные по науке',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RoadData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('quantity', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.road')),
            ],
            options={
                'verbose_name': 'Данные по дорогам',
                'verbose_name_plural': 'Данные по дорогам',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LabourData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('data', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.labour')),
            ],
            options={
                'verbose_name': 'Данные по труду',
                'verbose_name_plural': 'Данные по труду',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HouseData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('data', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.house')),
            ],
            options={
                'verbose_name': 'Данные по жилью',
                'verbose_name_plural': 'Данные по жилью',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HospitalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('deaths', models.IntegerField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.hospital')),
            ],
            options={
                'verbose_name': 'Данные по смертности',
                'verbose_name_plural': 'Данные по смертности',
                'ordering': ['hospital'],
            },
        ),
        migrations.CreateModel(
            name='EconomData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('data', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.econom')),
            ],
            options={
                'verbose_name': 'Данные по экономике',
                'verbose_name_plural': 'Данные по экономике',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EcologyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('data', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.ecology')),
            ],
            options={
                'verbose_name': 'Данные по экологии',
                'verbose_name_plural': 'Данные по экологии',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DemographicsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('index', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.demographics')),
            ],
            options={
                'verbose_name': 'Данные по демографии',
                'verbose_name_plural': 'Данные по демографии',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CultureData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('people', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.culture')),
            ],
            options={
                'verbose_name': 'Данные по культуре',
                'verbose_name_plural': 'Данные по культуре',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BusinessData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('data', models.FloatField()),
                ('region', models.CharField(blank=True, choices=[('tula', 'Тульская область'), ('moscow', 'Московская область'), ('spb', 'Санкт-Петербург'), ('saratov', 'Саратовская область'), ('novosibirsk', 'Новосибирская область'), ('yekaterinburg', 'Свердловская область'), ('krasnodar', 'Краснодарский край'), ('kazan', 'Республика Татарстан'), ('vladivostok', 'Приморский край'), ('krasnodar', 'Краснодарский край'), ('nizhny_novgorod', 'Нижегородская область'), ('rostov', 'Ростовская область')], max_length=50, verbose_name='Регион')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='nathprojects.business')),
            ],
            options={
                'verbose_name': 'Данные по предпринимательству',
                'verbose_name_plural': 'Данные по предпринимательству',
                'ordering': ['name'],
            },
        ),
    ]
